{
 "Resources": {
  "TasksTable88911DC5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/TasksTable/Resource"
   }
  },
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsPortfolioDemo/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/Resource"
   }
  },
  "VpcpublicSubnet1Subnet2BB74ED7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AwsPortfolioDemo/Vpc/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet1/Subnet"
   }
  },
  "VpcpublicSubnet1RouteTable15C15F8E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsPortfolioDemo/Vpc/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet1/RouteTable"
   }
  },
  "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
    },
    "SubnetId": {
     "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet1/RouteTableAssociation"
   }
  },
  "VpcpublicSubnet1DefaultRouteB88F9E93": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet1/DefaultRoute"
   }
  },
  "VpcpublicSubnet2SubnetE34B022A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AwsPortfolioDemo/Vpc/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet2/Subnet"
   }
  },
  "VpcpublicSubnet2RouteTableC5A6DF77": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsPortfolioDemo/Vpc/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet2/RouteTable"
   }
  },
  "VpcpublicSubnet2RouteTableAssociationCCE257FF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
    },
    "SubnetId": {
     "Ref": "VpcpublicSubnet2SubnetE34B022A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet2/RouteTableAssociation"
   }
  },
  "VpcpublicSubnet2DefaultRoute732F0BEB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/publicSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsPortfolioDemo/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Vpc/VPCGW"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/Cluster/Resource"
   }
  },
  "WorkerTaskDefTaskRole7915D243": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/WorkerTaskDef/TaskRole/Resource"
   }
  },
  "WorkerTaskDefTaskRoleDefaultPolicy04B116E6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TasksTable88911DC5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WorkerTaskDefTaskRoleDefaultPolicy04B116E6",
    "Roles": [
     {
      "Ref": "WorkerTaskDefTaskRole7915D243"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/WorkerTaskDef/TaskRole/DefaultPolicy/Resource"
   }
  },
  "WorkerTaskDef3CFCC8D9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "TABLE_NAME",
        "Value": {
         "Ref": "TasksTable88911DC5"
        }
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2632c2a31efc4d57ed008c8e549459198c4c0072febb5d7439e856ccd752a1f1"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "WorkerTaskDefWorkerContainerLogGroup93EC44E5"
        },
        "awslogs-stream-prefix": "worker",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "WorkerContainer"
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "WorkerTaskDefExecutionRoleA889F066",
      "Arn"
     ]
    },
    "Family": "AwsPortfolioDemoWorkerTaskDefB59FEB69",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "X86_64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "WorkerTaskDefTaskRole7915D243",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/WorkerTaskDef/Resource"
   }
  },
  "WorkerTaskDefWorkerContainerLogGroup93EC44E5": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/WorkerTaskDef/WorkerContainer/LogGroup/Resource"
   }
  },
  "WorkerTaskDefExecutionRoleA889F066": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/WorkerTaskDef/ExecutionRole/Resource"
   }
  },
  "WorkerTaskDefExecutionRoleDefaultPolicy7E2F924A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "WorkerTaskDefWorkerContainerLogGroup93EC44E5",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WorkerTaskDefExecutionRoleDefaultPolicy7E2F924A",
    "Roles": [
     {
      "Ref": "WorkerTaskDefExecutionRoleA889F066"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/WorkerTaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "TaskSG7164C6FA": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AwsPortfolioDemo/TaskSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/TaskSG/Resource"
   }
  },
  "ApiFnServiceRoleD18AAE0E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/ApiFn/ServiceRole/Resource"
   }
  },
  "ApiFnServiceRoleDefaultPolicy56A1E6E5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TasksTable88911DC5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": {
        "Ref": "WorkerTaskDef3CFCC8D9"
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WorkerTaskDefTaskRole7915D243",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "WorkerTaskDefExecutionRoleA889F066",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiFnServiceRoleDefaultPolicy56A1E6E5",
    "Roles": [
     {
      "Ref": "ApiFnServiceRoleD18AAE0E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/ApiFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ApiFnE0725F78": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "54e9ee0afe41c4029957dc2e66c65c0b02ef46fa61e46f0afdb90c7fe834b8e7.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "TasksTable88911DC5"
      },
      "CLUSTER_ARN": {
       "Fn::GetAtt": [
        "ClusterEB0386A7",
        "Arn"
       ]
      },
      "TASK_DEF_ARN": {
       "Ref": "WorkerTaskDef3CFCC8D9"
      },
      "SUBNET_IDS": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
         },
         ",",
         {
          "Ref": "VpcpublicSubnet2SubnetE34B022A"
         }
        ]
       ]
      },
      "SECURITY_GROUP_ID": {
       "Fn::GetAtt": [
        "TaskSG7164C6FA",
        "GroupId"
       ]
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ApiFnServiceRoleD18AAE0E",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ApiFnServiceRoleDefaultPolicy56A1E6E5",
    "ApiFnServiceRoleD18AAE0E"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/ApiFn/Resource",
    "aws:asset:path": "asset.54e9ee0afe41c4029957dc2e66c65c0b02ef46fa61e46f0afdb90c7fe834b8e7",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "HttpApiF5A9A8A7": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "Name": "HttpApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/HttpApi/Resource"
   }
  },
  "HttpApiDefaultStage3EEB07D6": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/HttpApi/DefaultStage/Resource"
   }
  },
  "HttpApiANYgraphqlLambdaIntegrationC2CA8421": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ApiFnE0725F78",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/HttpApi/ANY--graphql/LambdaIntegration/Resource"
   }
  },
  "HttpApiANYgraphqlLambdaIntegrationPermissionA789093E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApiFnE0725F78",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/graphql"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/HttpApi/ANY--graphql/LambdaIntegration-Permission"
   }
  },
  "HttpApiANYgraphql73F3F450": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "ANY /graphql",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiANYgraphqlLambdaIntegrationC2CA8421"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/HttpApi/ANY--graphql/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11Ry27jMAz8lt4Vbet8QZqiD2DRBs6i14CWGa9iWzJEqkEg+N8XlBpn0ROHI5IzFCtdPaz1/R2caWXafjXYRqc9g+kVnOmQ2ouD0beNTn+gGVBtjy6DWaGpdPqcjFCfu63axWawZh8bhyzcDdU+Mi7thb9xGyJvLLD1bikW8OYYg0N+AcYzXL5lvrMNM5i/IzpWezQxWL68BB+nLPA/IT5Jp+0QiTHI8xU+Q+hAPFD/hEfr7NXBT8Y7Busw3DgZGg5AhEz6yZsew9sInayCLG+6xsmTZR8uj0CoLIw61b58QI47P1iTlypoVoPvSKffvlsWueJZDTA2LRycb/FE+j2H5+hMNkjrq5WiT2v9GE2PnKVLq07bo1s6RBXDaInyMjDZrnzrV6XTK/O0mawUSZB0z9CV22UgVDmTILlTF5b7/Uhz3TyrGsnHYFBljzLHuk4KPiJPkWclu+kT/fqqKv1Q6fu7E1m7CtGxHVHXJf4DZSaFIK4CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "AwsPortfolioDemo/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "GraphQLEndpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::GetAtt": [
        "HttpApiF5A9A8A7",
        "ApiEndpoint"
       ]
      },
      "/graphql"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}